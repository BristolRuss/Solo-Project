{"version":3,"sources":["Components/Header/Header.js","Components/Header/index.js","data/actions.js","Components/Settings/Settings.js","Components/Settings/index.js","Components/PlayerTable/PlayerTable.js","Components/PlayerTable/index.js","Components/Players/Players.js","Components/Players/index.js","Components/Player1/Player1.js","Components/Player1/index.js","Components/Player2/Player2.js","Components/Player2/index.js","Components/MatchUps/MatchUps.js","Components/MatchUps/index.js","Components/App/App.js","Components/App/index.js","data/initial.js","data/reducer.js","data/store.js","index.js"],"names":["Header","reset","className","onClick","connect","dispatch","type","Settings","target","alternate","handleFormSubmit","useState","aim","setAim","switchOn","setSwitchOn","onSubmit","e","preventDefault","onChange","currentTarget","value","state","save","PlayerTable","players","handleRandomise","handleQF","proceedMatches","length","map","player","index","key","name","undefined","Object","values","matchesUnderway","Players","handleAddPlayer","addToQF","pairings","setName","randomise","htmlFor","id","required","match","player1","player2","addPlayer","Player1","server","handleIncrement1","winner","currentMatch","score","Player2","handleIncrement2","MatchUps","handleSemiFinals","handleFinal","roundsCompleted","style","textDecoration","eliminated","gamesWon","App","settingsSaved","initial","semiFinals","final","deuce","i","total","Math","floor","reducer","action","newArray","newState","sort","random","Final","quarterFinals","saveSettings","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","persistState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4dbb93e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = ({reset}) => {\r\n    const handleReset = () => {\r\n        reset()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <header className=\"App-header\">\r\n                <h1 className=\"header\">Ping Pong Tournament</h1>\r\n            </header>\r\n            <button className = \"btn btn-danger resetButton\" onClick = {handleReset}>Reset</button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Header;","import { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport { clear } from '../../data/actions';\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        reset: () => dispatch(clear()),\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Header); ","export const addPlayer = (name) => {\r\n    return {\r\n        type: \"ADD_PLAYER\",\r\n        name: name\r\n    }\r\n}\r\n\r\nexport const clear = () => {\r\n    return {\r\n        type: \"CLEAR\"\r\n    }\r\n}\r\n\r\nexport const randomise = () => {\r\n    return {\r\n        type: \"RANDOMISE\"\r\n    }\r\n}\r\n\r\nexport const handleIncrement1 = () => {\r\n    return {\r\n        type: \"PLAYER1SCORES\"\r\n    }\r\n}\r\n\r\nexport const handleIncrement2 = () => {\r\n    return {\r\n        type: \"PLAYER2SCORES\"\r\n    }\r\n}\r\n\r\nexport const matchesUnderway = (value) => {\r\n    return {\r\n        type: \"MATCHES_UNDERWAY\",\r\n        matchesUnderway: value\r\n    }\r\n}\r\n\r\nexport const quarterFinals = () => {\r\n    return {\r\n        type: \"QUARTER_FINALS\"\r\n    }\r\n}\r\n\r\nexport const semiFinals = () => {\r\n    return {\r\n        type: \"SEMI_FINALS\"\r\n    }\r\n}\r\n\r\nexport const Final = () => {\r\n    return {\r\n        type: \"FINAL\"\r\n    }\r\n}\r\n\r\nexport const save = (aim, switchOn) => {\r\n    return {\r\n        type: \"SAVE_SETTINGS\",\r\n        target: +aim,\r\n        alternate: +switchOn\r\n    }\r\n}","import React, { useState } from 'react';\r\n\r\nconst Settings = ({target, alternate, handleFormSubmit}) => {\r\n    const [ aim, setAim ] = useState(`${target}`);\r\n    const [ switchOn, setSwitchOn ] = useState(`${alternate}`);\r\n\r\n    const handleTarget = (e) => {\r\n        setAim(e.currentTarget.value)\r\n    }\r\n\r\n    const handleAlternate = (e) => {\r\n        setSwitchOn(e.currentTarget.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); \r\n        handleFormSubmit(aim, switchOn)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>Settings</h3>\r\n            <form onSubmit = { handleSubmit } className = \"settingsForm\">\r\n                <div className = \"form-group\">\r\n                    <label>Winning Score</label>\r\n                    <input onChange = {handleTarget} value = {aim} type = \"number\" className=\"form-control\"></input>\r\n                    <label>Alternate Server Every</label>\r\n                    <input onChange = {handleAlternate} value = {switchOn} type = \"number\" className=\"form-control\"></input>\r\n                    <button className = \"btn btn-dark\">Save Settings</button>\r\n                </div>\r\n            </form>\r\n        </> \r\n    )\r\n};\r\n\r\nexport default Settings;","import { connect } from 'react-redux';\r\nimport Settings from './Settings';\r\nimport { save } from '../../data/actions';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        target: state.target,\r\n        alternate: state.alternate\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        handleFormSubmit: (aim, switchOn) => dispatch(save(aim, switchOn))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings); ","import React from 'react';\r\n\r\nconst PlayerTable = ({players, handleRandomise, handleQF, proceedMatches}) => {\r\n\r\n    // Randomises players and changes the matchups\r\n    const randomise = () => {\r\n        handleRandomise();\r\n        handleQF();\r\n    };\r\n\r\n    const handleMatches = () => {\r\n        proceedMatches(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* This table displays after the first player has been added */}\r\n            {players.length >= 1 ? \r\n            <section className=\"tableWrapper\">\r\n                <h1>Players</h1>\r\n                <table className=\"playerTable\">\r\n                    <tbody>\r\n                        {players.map((player, index) =>\r\n                        <tr key= {index}>\r\n                            <td className=\"playerInfo\">Player {index + 1}</td>\r\n                            <td>{player.name}</td>\r\n                        </tr>)}\r\n                    </tbody>\r\n                </table>\r\n                {/* These buttons will display once all players have been added. The user \r\n                can then randomise the table further, or proceed to the games. */}\r\n                {players.length >= 8 ?\r\n                <nav className=\"tableButtons\">\r\n                    <button onClick={randomise} className=\"btn btn-dark\">Randomise Again</button>\r\n                    <button onClick={handleMatches} className=\"btn btn-dark\">Proceed To Games</button>\r\n                </nav>\r\n                :\r\n                undefined}\r\n            </section>\r\n            :\r\n            undefined}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlayerTable;","import { connect } from 'react-redux';\r\nimport PlayerTable from './PlayerTable';\r\nimport { randomise, quarterFinals, matchesUnderway } from '../../data/actions';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        players: Object.values(state.players)\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        handleRandomise: () => dispatch(randomise()),\r\n        handleQF: () => dispatch(quarterFinals()),\r\n        proceedMatches: (value) => dispatch(matchesUnderway(value))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayerTable); ","import React, { useState } from 'react';\r\nimport PlayerTable from '../PlayerTable';\r\n\r\nconst Players = ({players, handleAddPlayer, handleRandomise, addToQF, pairings}) => {\r\n    const [ name, setName ] = useState('');\r\n\r\n    const handleAddToPlayers = (e) => {\r\n        setName(e.currentTarget.value)\r\n    }\r\n   \r\n    // Adds player to state. Once all players have been added it will randomise the data and so initial pairings\r\n    const handleSubmit = (e) => {\r\n        if (players.length < 7){\r\n            e.preventDefault();\r\n            handleAddPlayer(name);\r\n            setName('')\r\n        }\r\n        else {\r\n            e.preventDefault();\r\n            handleAddPlayer(name);\r\n            randomise();\r\n            addToQF();\r\n        }\r\n    }\r\n\r\n    // Randomises players\r\n    const randomise = () => {\r\n        handleRandomise();\r\n    };\r\n\r\n    return(\r\n        <>\r\n            {/* This section displays until all players have been added */}\r\n            <section className = \"players\">\r\n                {players.length < 8 ?      \r\n                <form onSubmit = { handleSubmit } className = \"form-group\">\r\n                    <h2>Please enter 8 players</h2>  \r\n                    <label htmlFor=\"addName\">Player {players.length + 1} name</label>\r\n                    <input id=\"addName\" onChange = {handleAddToPlayers} value={name} className=\"form-control\" required></input>\r\n                    <button className=\"btn btn-dark\">Add</button>\r\n                </form>\r\n                : undefined}\r\n                <PlayerTable />\r\n                {/* once all players have been added this will display the potential matchups.\r\n                the user can either go with the selected or randomise again until happy */}\r\n                {players.length === 8 ?\r\n                    <div>\r\n                        {pairings.map((match, index) =>\r\n                        <div className=\"matchPreview\" key= {index}>\r\n                            <h2>Match {index + 1}</h2>\r\n                            <h4>\r\n                                {match.player1.name}\r\n                            </h4> \r\n                            Vs \r\n                            <h4>\r\n                                {match.player2.name}\r\n                            </h4>\r\n                        </div>)}\r\n                    </div>\r\n                :\r\n                undefined\r\n                }\r\n            </section>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Players;","import { connect } from 'react-redux';\r\nimport Players from './Players';\r\nimport { addPlayer, randomise, quarterFinals } from '../../data/actions';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        players: Object.values(state.players),\r\n        pairings: Object.values(state.pairings)\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        handleAddPlayer: (name) => dispatch(addPlayer(name)),\r\n        handleRandomise: () => dispatch(randomise()),\r\n        addToQF: () => dispatch(quarterFinals())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Players); ","import React from 'react';\r\n\r\nconst Player1 = ({server, handleIncrement1, winner, currentMatch, pairings}) =>  (\r\n<div className=\"col-md-6 mt-4\">\r\n    <div className= {server === 1 ? \"card text-center bg-dark text-white\" : \"card text-center text-dark\" }>\r\n        <h5 className=\"card-header\">{pairings[currentMatch].player1.name}</h5>\r\n        <div className=\"card-body\">\r\n            <p className=\"card-text display-1\">{pairings[currentMatch].player1.score}</p>\r\n        </div>\r\n        <div className=\"card-footer\">\r\n            <button  onClick = {winner === 0 ? handleIncrement1 : null} className=\"form-control btn btn-success\">+</button>\r\n        </div>\r\n    </div>\r\n</div>  \r\n       \r\n)\r\n\r\nexport default Player1;","import { connect } from 'react-redux';\r\nimport Player1 from './Player1';\r\nimport { handleIncrement1 } from '../../data/actions'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        server: state.server,\r\n        winner: state.winner,\r\n        currentMatch: state.currentMatch,\r\n        pairings: state.pairings\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        handleIncrement1 : () => dispatch(handleIncrement1()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Player1);","import React from 'react';\r\n\r\nconst Player2 = ({server, handleIncrement2, winner, currentMatch, pairings}) =>  (\r\n<div className=\"col-md-6 mt-4\">\r\n    <div className= {server === 2 ? \"card text-center bg-dark text-white\" : \"card text-center text-dark\" }>\r\n        <h5 className=\"card-header\">{pairings[currentMatch].player2.name}</h5>\r\n        <div className=\"card-body\">\r\n            <p className=\"card-text display-1\">{pairings[currentMatch].player2.score}</p>\r\n        </div>\r\n        <div className=\"card-footer\">\r\n            <button  onClick = {winner === 0 ? handleIncrement2 : null} className=\"form-control btn btn-success\">+</button>\r\n        </div>\r\n    </div>\r\n</div>  \r\n       \r\n)\r\n\r\nexport default Player2;","import { connect } from 'react-redux';\r\nimport Player2 from './Player2';\r\nimport { handleIncrement2 } from '../../data/actions'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        server: state.server,\r\n        winner: state.winner,\r\n        currentMatch: state.currentMatch,\r\n        pairings: state.pairings\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        handleIncrement2 : () => dispatch(handleIncrement2()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Player2);","import React from 'react';\r\nimport Player1 from '../Player1';\r\nimport Player2 from '../Player2';\r\n\r\nconst MatchUps = ({pairings, handleSemiFinals, handleFinal, roundsCompleted, currentMatch}) => {\r\n\r\n    // these two actions will sort pairings for the later rounds\r\n    const semis = () => {\r\n        handleSemiFinals();\r\n    }\r\n\r\n    const final = () => {\r\n        handleFinal();\r\n    }\r\n\r\n    return (\r\n        <>  \r\n        {/* displays confetti when a winner has been crowned */}\r\n            {roundsCompleted === 5  ?\r\n            <div className=\"container\">\r\n                <div className=\"confetti\"></div>\r\n                <div className=\"confetti\"></div>\r\n                <div className=\"confetti\"></div>\r\n                <div className=\"confetti\"></div>\r\n                <div className=\"confetti\"></div>\r\n                <div className=\"confetti\"></div>\r\n                <div className=\"confetti\"></div>\r\n                <div className=\"confetti\"></div>\r\n                <div className=\"confetti\"></div>\r\n                <div className=\"confetti\"></div>\r\n                <div className=\"confetti\"></div>\r\n                <div className=\"confetti\"></div>\r\n                <div className=\"confetti\"></div>\r\n                <div className=\"confetti\"></div>\r\n                <div className=\"confetti\"></div>\r\n            </div>\r\n            :\r\n            undefined\r\n            }\r\n            <section className=\"games\">\r\n                {pairings.map((match, index) =>\r\n                    <div className={index === currentMatch && roundsCompleted !== 5 ? \"selected matchUps\" : \"matchUps\"} key={index}>\r\n                        <h1>{roundsCompleted === 4 || roundsCompleted === 5 ? \"Final\" : roundsCompleted === 2 || roundsCompleted === 3 ? `Semi-Final ${index + 1} `: `Match ${index + 1}`}</h1>\r\n                        <h2 \r\n                        style = {{textDecoration: match.player1.eliminated === true ? 'line-through' : undefined}}>\r\n                            {match.player1.name}</h2> \r\n                        Vs \r\n                        <h2 style = {{textDecoration: match.player2.eliminated === true ? 'line-through' : undefined}}>\r\n                            {match.player2.name}</h2>\r\n                    </div>\r\n                )}\r\n            </section>\r\n            {roundsCompleted === 1 || roundsCompleted === 3 || roundsCompleted === 5 ?\r\n            undefined :\r\n            // two player scoring components\r\n            <div className=\"imageLocation row mb-4\">\r\n                <Player1 />\r\n                <Player2 />\r\n            </div> \r\n            }\r\n            {/* buttons will be displayed when appropriate */}\r\n            {roundsCompleted === 1 ? <button className = \"proceed btn btn-dark\" onClick = {semis}>Proceed to Semi Finals</button> : undefined}\r\n            {roundsCompleted === 3 ? <button className = \"proceed btn btn-dark\" onClick = {final}>Proceed to Final</button> : undefined}\r\n            {/* displays the winner message once a winner has been crowned */}\r\n            {roundsCompleted === 5 ?\r\n                <h1 className=\"matchUps\">Congratulations! Your champion is {pairings[0].player1.gamesWon === 3 ? pairings[0].player1.name : pairings[0].player2.name}!</h1>\r\n            :\r\n                undefined\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MatchUps;","import { connect } from 'react-redux';\r\nimport MatchUps from './MatchUps';\r\nimport { semiFinals, Final } from '../../data/actions';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        players: Object.values(state.players),\r\n        pairings: Object.values(state.pairings),\r\n        roundsCompleted: state.roundsCompleted,\r\n        currentMatch: state.currentMatch\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        handleSemiFinals: () => dispatch(semiFinals()),\r\n        handleFinal: () => dispatch(Final())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MatchUps); ","import React from 'react';\nimport '../../App.css';\nimport Header from '../Header';\nimport Settings from '../Settings';\nimport Players from '../Players';\nimport MatchUps from '../MatchUps';\n\nfunction App({settingsSaved, matchesUnderway}) {\n  return (\n    <div className=\"App\">\n      <div className=\"Wrapper\">\n        <Header />\n        {/* This is checking if the settings have been saved. If they haven't the settings component displays. If true\n        the app contines. */}\n        {!settingsSaved ? \n          <Settings /> \n        :\n        // if settings have been saved then this checks if the pairings have been confirmed\n          !matchesUnderway ?\n            <Players />\n            :\n            <MatchUps />\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { connect } from 'react-redux';\r\nimport App from './App';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        settingsSaved: state.settingsSaved,\r\n        matchesUnderway: state.matchesUnderway\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App); ","const initial = {\r\n    players: [],\r\n    pairings: [],\r\n    semiFinals: [],\r\n    final:[],\r\n    target: 21,\r\n    alternate: 5,\r\n    settingsSaved: false,\r\n    matchesUnderway: false,\r\n    server: 1,\r\n    winner: 0,\r\n    deuce: 0,\r\n    currentMatch: 0,\r\n    roundsCompleted: 0\r\n}\r\n\r\nexport default initial;","import initial from \"./initial\";\r\n\r\n//sets matchesUnderway to true. This will allow the game to proceed to the game section\r\nconst matchesUnderway = (state, action) => {\r\n    return {\r\n        ...state,\r\n        matchesUnderway: action.matchesUnderway\r\n    }\r\n}\r\n\r\n// These two actions are responsible for increasing the player scores\r\nconst player1 = state => { \r\n    let newArray = [...state.pairings];\r\n    const i = state.currentMatch;\r\n    newArray[i].player1.score = newArray[i].player1.score + 1\r\n\r\n    return {\r\n        ...state, \r\n        pairings: newArray\r\n    }\r\n};\r\n\r\nconst player2 = state => { \r\n    let newArray = [...state.pairings];\r\n    const i = state.currentMatch;\r\n    newArray[i].player2.score = newArray[i].player2.score + 1\r\n\r\n    return {\r\n        ...state, \r\n        pairings: newArray\r\n    }\r\n};\r\n\r\n// Works out which player is serving during normal play and deuce\r\nconst server = state => {\r\n    const i = state.currentMatch;\r\n    const total = state.pairings[i].player1.score + state.pairings[i].player2.score\r\n\r\n    if (state.deuce === 1){\r\n        return{\r\n            ...state,\r\n            server: (Math.floor((total) / 2) % 2 + 1),\r\n        }\r\n    }  \r\n\telse return {\r\n        ...state,\r\n        server: (Math.floor((total) / state.alternate) % 2 + 1)\r\n    };\r\n}\r\n\r\n// This action is doing a LOT of work. Its primary job is to work out if a player has won,\r\n// but it is also updating a lot of other information such as pairings for the next round, resetting information and if\r\n// a player has been eliminated. \r\nconst winner = state => {\r\n    const i = state.currentMatch;\r\n    const player1 = state.pairings[i].player1;\r\n    const player2 = state.pairings[i].player2;\r\n\r\n    if (player1.score >= state.target && (player1.score - player2.score) >= 2){\r\n        return{\r\n        ...state,\r\n        player1: (player1.gamesWon = player1.gamesWon + 1, player1.score = 0),\r\n        player2: player2.eliminated = true,\r\n        deuce: 0,\r\n        server: 1,\r\n        semiFinals: [...state.semiFinals, player1],\r\n        final: state.roundsCompleted === 2 ? [...state.final, player1] : [...state.final],\r\n        currentMatch: state.currentMatch < state.pairings.length -1 ? state.currentMatch + 1: state.currentMatch,\r\n        roundsCompleted: state.currentMatch === state.pairings.length - 1 ? state.roundsCompleted + 1: state.roundsCompleted\r\n        }\r\n    }\r\n    if (player2.score >= state.target && (player2.score - player1.score) >= 2){\r\n        return{\r\n        ...state,\r\n        player2: (player2.gamesWon = player2.gamesWon + 1, player2.score = 0),\r\n        player1: player1.eliminated = true,\r\n        deuce: 0,\r\n        server: 1,\r\n        semiFinals: [...state.semiFinals, player2],\r\n        final: state.roundsCompleted === 2 ? [...state.final, player2] : [...state.final],\r\n        currentMatch: state.currentMatch < state.pairings.length - 1 ? state.currentMatch + 1: state.currentMatch,\r\n        roundsCompleted: state.currentMatch === state.pairings.length - 1 ? state.roundsCompleted + 1: state.roundsCompleted\r\n        }\r\n    }\r\n\r\n    //works out if the game needs to go to deuce. This is for the serving mechanic\r\n    if (player1.score >= state.target -1 && player2.score >= state.target - 1){\r\n        return{\r\n            ...state,\r\n            deuce: 1\r\n        }\r\n    }\r\n    else return state\r\n}\r\n\r\n//Adds player object to the game and gives them the required properties\r\nconst addPlayer = (state, action) => {\r\n    return {\r\n        ...state,\r\n        players: [\r\n            ...state.players,\r\n            {\r\n                name: action.name,\r\n                gamesWon: 0,\r\n                eliminated: false,\r\n                score: 0\r\n            }\r\n        ]\r\n    }\r\n}\r\n\r\n//Takes the randomised player array and sorts them into pairs. \r\nconst quarterFinals = (state) => {\r\n    const players = state.players;\r\n    const quarterFinals = [];\r\n\r\n    quarterFinals[0] = {player1:players[0], player2:players[1]}\r\n    quarterFinals[1] = {player1:players[2], player2:players[3]}\r\n    quarterFinals[2] = {player1:players[4], player2:players[5]}\r\n    quarterFinals[3] = {player1:players[6], player2:players[7]}\r\n\r\n    return {\r\n        ...state,\r\n        pairings: quarterFinals\r\n    }\r\n}\r\n\r\n//Takes the winners from the previous rounds and sorts them into pairs.\r\nconst semiFinals = (state) => {\r\n    const players = state.semiFinals;\r\n    const semiFinals = [];\r\n\r\n    semiFinals[0] = {player1:players[0], player2:players[1]}\r\n    semiFinals[1] = {player1:players[2], player2:players[3]}\r\n\r\n    return {\r\n        ...state,\r\n        currentMatch: 0,\r\n        roundsCompleted: 2,\r\n        pairings: semiFinals\r\n    }\r\n}\r\n\r\nconst Final = (state) => {\r\n    const players = state.final;\r\n    const final = [];\r\n\r\n    final[0] = {player1:players[0], player2:players[1]}\r\n\r\n    return {\r\n        ...state,\r\n        currentMatch: 0,\r\n        roundsCompleted: 4,\r\n        pairings: final\r\n    }\r\n}\r\n\r\n//Once all players have been added this will randomise the order. The user can them randomise further if required \r\nconst randomise = (state) => {\r\n    const newState = {\r\n        ...state,\r\n    }\r\n    newState.players.sort(function() { return 0.5 - Math.random() });\r\n\r\n    return newState;\r\n}\r\n\r\nconst saveSettings = (state, action) => {\r\n    return {\r\n        ...state,\r\n        target: action.target,\r\n        alternate: action.alternate,\r\n        settingsSaved: true\r\n    }\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_PLAYER\" : return addPlayer(state, action);\r\n        case \"PLAYER1SCORES\": return winner(server(player1(state)));\r\n        case \"PLAYER2SCORES\": return winner(server(player2(state)));\r\n        case \"RANDOMISE\" : return randomise(state);\r\n        case \"MATCHES_UNDERWAY\" : return matchesUnderway(state, action);\r\n        case \"SEMI_FINALS\" : return semiFinals(state);\r\n        case \"FINAL\" : return Final(state);\r\n        case \"QUARTER_FINALS\" : return quarterFinals(state);\r\n        case \"SAVE_SETTINGS\" : return saveSettings(state, action);\r\n        case \"CLEAR\" : return initial;\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import { createStore, compose } from \"redux\";\r\nimport reducer from './reducer';\r\nimport persistState from \"redux-localstorage\";\r\nimport initial from './initial';\r\n\r\nconst composeEnhancers =\r\nwindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\nreducer,\r\ninitial,\r\ncomposeEnhancers(persistState())\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport { Provider } from \"react-redux\";\nimport store from './data/store'\n\nReactDOM.render(\n  <Provider store={ store }>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}